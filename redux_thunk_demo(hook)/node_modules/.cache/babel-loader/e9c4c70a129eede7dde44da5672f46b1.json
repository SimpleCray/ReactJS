{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ReactJS\\\\redux_thunk_demo(hook)\\\\src\\\\components\\\\UserInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../style/UserInformation.css';\n\nconst UserInformation = props => {\n  _s();\n\n  const {\n    user,\n    error,\n    loading\n  } = useSelector(state => state.fetchUser);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"loading\",\n      children: \"Searching... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 20\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"error\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 18\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar_url,\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DataField, {\n        label: \"Github ID\",\n        value: user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DataField, {\n        label: \"Github name\",\n        value: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DataField, {\n        label: \"Github URL\",\n        value: user.html_url,\n        isURL: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserInformation, \"nBjQLoZ77leYY6sr/ykchBPZEfE=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserInformation;\n\nconst DataField = ({\n  label,\n  value,\n  isURL\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isURL ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: value,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value || \"No name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = DataField;\nexport default UserInformation;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserInformation\");\n$RefreshReg$(_c2, \"DataField\");","map":{"version":3,"sources":["D:/ReactJS/redux_thunk_demo(hook)/src/components/UserInformation.js"],"names":["React","useSelector","UserInformation","props","user","error","loading","state","fetchUser","message","avatar_url","id","name","html_url","DataField","label","value","isURL"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,8BAAP;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA5C;AACA,sBACE;AAAA,eACGF,OAAO,iBAAK;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,EAEGD,KAAK,iBAAK;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBA,KAAK,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFb,EAGGL,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACM,UAAf;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,KAAK,EAAEN,IAAI,CAACO;AAFd;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,KAAK,EAAEP,IAAI,CAACQ;AAFd;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,KAAK,EAAER,IAAI,CAACS,QAFd;AAGE,QAAA,KAAK;AAHP;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADF;AAwBD,CA1BD;;GAAMX,e;UAC6BD,W;;;KAD7BC,e;;AA4BN,MAAMY,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAC3C,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,iBAAQF,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,KAAK,gBAAI;AAAG,MAAA,IAAI,EAAED,KAAT;AAAA,gBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAoC;AAAA,gBAAOA,KAAK,IAAI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAF5C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMF,S;AASN,eAAeZ,eAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../style/UserInformation.css'\r\n\r\n\r\nconst UserInformation = (props) => {\r\n  const { user, error, loading } = useSelector(state => state.fetchUser);\r\n  return (\r\n    <>\r\n      {loading && (<h3 className=\"loading\">Searching... </h3>)}\r\n      {error && (<h3 className=\"error\">{error.message}</h3>)}\r\n      {user && (\r\n        <div className=\"main\">\r\n          <img src={user.avatar_url} alt=\"avatar\" />\r\n          <DataField\r\n            label=\"Github ID\"\r\n            value={user.id}\r\n          />\r\n          <DataField\r\n            label=\"Github name\"\r\n            value={user.name}\r\n          />\r\n          <DataField\r\n            label=\"Github URL\"\r\n            value={user.html_url}\r\n            isURL\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst DataField = ({label, value, isURL}) => {\r\n  return (\r\n    <div className=\"data\">\r\n      <label>{label}: </label>\r\n      {isURL ? (<a href={value}>{value}</a>) : (<span>{value || \"No name\"}</span>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInformation"]},"metadata":{},"sourceType":"module"}